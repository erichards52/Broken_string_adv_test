def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

params {
    // Options: Required
    bed_file            = null
    outdir              = null
    bed_file_intersect  = null

    manifest {
    name            = 'filter-intersect-bedfiles'
    author          = 'Edward Richards'
    homePage        = 'https://github.com/erichards52/Broken_string_adv_test'
    description     = 'Nextflow filtering mapQ and intersecting to count DSBs'
    mainScript      = 'main.nf'
    }

    // Options: Other
    publish_dir_mode    = 'copy'
    }

    process {
    cpus = 1
    maxRetries = 3
    }

publishDir = "${params.outdir}"
    
trace {
    enabled = true
    file = "${params.outdir}/pipeline_meta/trace_${trace_timestamp}.tsv"
    fields = 'task_id,hash,name,process,status,exit,container,cpus,time,disk,memory,rss,%cpu,%mem,vmem,peak_rss,peak_vmem,submit,start,complete,duration,realtime,rchar,wchar,read_bytes,write_bytes,workdir'
}

timeline {
    enabled = true
    file = "${params.outdir}/pipeline_meta/timeline_${trace_timestamp}.html"
}

report {
    enabled = true
    file = "${params.outdir}/pipeline_meta/report_${trace_timestamp}.html"
}

dag {
    enabled = true
    file = "${params.outdir}/pipeline_meta/dag_${trace_timestamp}.html"
}